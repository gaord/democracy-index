"hindu",
"buddhist",
"folkReligion",
"otherReligion",
"jewish",
"allReligions"
)
data_wide <- merge(democracyIndex, religion, by="country")
startCol <- which(colnames(data_wide) == "christian")
endCol <- which(colnames(data_wide) == "jewish")
data_long <- gather(data_wide, key="religion", value="count",  startCol:endCol, factor_key=TRUE)
write_json(democracyIndex,"../webpack/dist/data/democracy-index.json")
write_json(religion,"../webpack/dist/data/religion.json")
write_json(data_wide,"../webpack/dist/data/data_wide.json")
write_json(data_long,"../webpack/dist/data/data_long.json")
library(tidyverse)
library(jsonlite)
library(corrgram)
# ---------------------------------------------------------
# load democracy index data
democracyIndex <- read_json("../webpack/dist/data/democracy-index.json", simplifyVector = TRUE)
religion <- read_json("../webpack/dist/data/religion.json", simplifyVector = TRUE)
data_wide <- read_json("../webpack/dist/data/data_wide.json", simplifyVector = TRUE)
data_long <- read_json("../webpack/dist/data/data_long.json", simplifyVector = TRUE)
data_long <- arrange(data_long, desc(demScore))
# normalize as percent of all religions
data_wide$christianPct <- data_wide$christian / data_wide$allReligions
data_wide$muslimPct <- data_wide$muslim / data_wide$allReligions
data_wide$unaffiliatedPct <- data_wide$unaffiliated / data_wide$allReligions
data_wide$hinduPct <- data_wide$hindu / data_wide$allReligions
data_wide$buddhistPct <- data_wide$buddhist / data_wide$allReligions
data_wide$folkReligionPct <- data_wide$folkReligion / data_wide$allReligions
data_wide$otherReligionPct <- data_wide$otherReligion / data_wide$allReligions
data_wide$jewishPct <- data_wide$jewish / data_wide$allReligions
# plot correlation of religions composition against democracy index factors
pctCols <- c(
"demScore",
"demPluralism",
"demFunctioning",
"demParticipation",
"demCulture",
"demCivil",
"christianPct",
"muslimPct",
"unaffiliatedPct",
"hinduPct",
"buddhistPct",
"folkReligionPct",
"otherReligionPct",
"jewishPct"
)
corrgram(data_wide[,pctCols], upper.panel=panel.pts, lower=panel.pie, main="Correlation by Composition (Percent)")
# plot correlation of religions population against democracy index factors
popCols <- c(
"demScore",
"demPluralism",
"demFunctioning",
"demParticipation",
"demCulture",
"demCivil",
"christian",
"muslim",
"unaffiliated",
"hindu",
"buddhist",
"folkReligion",
"otherReligion",
"jewish"
)
corrgram(data_wide[,popCols], upper.panel=panel.pts, lower=panel.pie, main="Correlation by Population")
# plot all countries ordered by democracy index score
ggplot(data_wide, aes(x=reorder(country, demScore), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip()
# plot all countries ordered by democracy index score
ggplot(data_wide, aes(x=reorder(country, demScore), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="All Countries Orded by Democracy Index", x="Country", y="Democracy Index Rating")
# plot all countries ordered by democracy index score
ggplot(data_wide, aes(x=reorder(country, demScore), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="All Countries Orded by Democracy Index Score", x="Country", y="Democracy Index Rating")
# show democracy by majority muslim countries
d.muslim <- subset(data_wide, muslim > 0.5)
ggplot(d.muslim, aes(x=reorder(country, demScore), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="> 50% Muslim Countries Orded by Democracy Index", x="Country", y="Democracy Index Rating")
# show democracy index by majority christian countries
d.christian <- subset(data_wide, christian > 0.5)
ggplot(d.christian, aes(x=reorder(country, demScore), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="> 50% Christian Countries Orded by Democracy Index", x="Country", y="Democracy Index Rating")
# show all countries sorted by region
ggplot(data_wide, aes(x=reorder(country, region), y=demScore, fill=demCategory)) +
geom_bar(stat="identity") +
coord_flip() +
labs(title="All Countries Orded by Democracy Index Sorted by Region", x="Country", y="Democracy Index Rating")
# total christians by democracy index category
christian <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","christian")])
ggplot(christian, aes(x=factor(demCategory), y=christian)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Christians by Index Cateogy")
# total muslims by democracy index category
muslim <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","muslim")])
ggplot(muslim, aes(x=factor(demCategory), y=muslim)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Muslims by Index Cateogy")
# total hindus by democracy index category
hindu <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","hindu")])
ggplot(hindu, aes(x=factor(demCategory), y=hindu)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Hindus by Index Cateogy")
# total other religions by democracy index category
other <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","otherReligion")])
ggplot(other, aes(x=factor(demCategory), y=otherReligion)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Othe Religions by Index Cateogy")
# total other religions by democracy index category
unaffiliated <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","unaffiliated")])
ggplot(unaffiliated, aes(x=factor(demCategory), y=unaffiliated)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Unaffialited by Index Cateogy")
# folk religions by democracy index category
folk <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","folkReligion")])
ggplot(folk, aes(x=factor(demCategory), y=folkReligion)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Folk Religions by Index Cateogy")
# buddhists by democracy index category
buddhist <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","buddhist")])
ggplot(buddhist, aes(x=factor(demCategory), y=buddhist)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Buddhists by Index Cateogy")
# jews by democracy index category
jewish <- aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","jewish")])
ggplot(jewish, aes(x=factor(demCategory), y=jewish)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Jews by Index Cateogy")
# plot religion by full democracy
fullDemocracy <- aggregate(. ~ religion, sum, data=data_long[data_long$demCategory=="Full democracy",c("religion","count")])
ggplot(fullDemocracy, aes(x=religion, y=count)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Religion by Full Democracy")
# plot religion by flawed democracy
flawedDemocracy <- aggregate(. ~ religion, sum, data=data_long[data_long$demCategory=="Flawed democracy",c("religion","count")])
ggplot(flawedDemocracy, aes(x=religion, y=count)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Religion by Flawed Democracy")
# plot religion by flawed democracy
flawedDemocracy <- aggregate(. ~ religion, sum, data=data_long[data_long$demCategory=="Flawed democracy",c("religion","count")])
ggplot(flawedDemocracy, aes(x=religion, y=count)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Religion by Flawed Democracy")
# plot religion by hybrid regime
hybridRegime <- aggregate(. ~ religion, sum, data=data_long[data_long$demCategory=="Hybrid regime",c("religion","count")])
ggplot(hybridRegime, aes(x=religion, y=count)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Religion by Hybrid Regime")
# plot religion by authoritarian
authoritarian <- aggregate(. ~ religion, sum, data=data_long[data_long$demCategory=="Authoritarian",c("religion","count")])
ggplot(authoritarian, aes(x=religion, y=count)) +
geom_bar(stat="identity") +
scale_y_continuous(labels = scales::comma, limits=c(NA, 1000000000)) +
coord_flip() +
labs(title = "Religion by Authoritarian")
library(tidyverse)
library(jsonlite)
library(corrgram)
# ---------------------------------------------------------
# load democracy index data
democracyIndex <- read_json("../webpack/dist/data/democracy-index.json", simplifyVector = TRUE)
religion <- read_json("../webpack/dist/data/religion.json", simplifyVector = TRUE)
data_wide <- read_json("../webpack/dist/data/data_wide.json", simplifyVector = TRUE)
data_long <- read_json("../webpack/dist/data/data_long.json", simplifyVector = TRUE)
data_long <- arrange(data_long, desc(demScore))
# normalize as percent of all religions
data_wide$christianPct <- data_wide$christian / data_wide$allReligions
data_wide$muslimPct <- data_wide$muslim / data_wide$allReligions
data_wide$unaffiliatedPct <- data_wide$unaffiliated / data_wide$allReligions
data_wide$hinduPct <- data_wide$hindu / data_wide$allReligions
data_wide$buddhistPct <- data_wide$buddhist / data_wide$allReligions
data_wide$folkReligionPct <- data_wide$folkReligion / data_wide$allReligions
data_wide$otherReligionPct <- data_wide$otherReligion / data_wide$allReligions
data_wide$jewishPct <- data_wide$jewish / data_wide$allReligions
aggregate(religion ~ count, sum, data=data_long)
aggregate(religion ~ count, sum, data=data_long)
aggregate(. ~ demCategory, sum, data=data_wide[,c("demCategory","christian")])
aggregate(count ~ religion, sum, data=data_long)
aggregate(count ~ religion, sum, data=data_long) %>%
as.data.frame
aggregate(count ~ religion, sum, data=data_long) %>%
as.data.frame %>%
arrange(desc(count))
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
library(tidyverse)
library(readxl)
library(jsonlite)
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
View(geoCode)
intersect(democracyIndex$country, geoCode$Country)
setdiff(democracyIndex$country, geoCode$Country)
View(geoCode)
# find country names that do not match
length(setdiff(democracyIndex$country, geoCode$Country))
geoCode$Country %>% str_replace("Syrian Arab Republic","Syria")
geoCode$Country <- str_replace(geoCode$Country,find, replace)
# 18 need updating
find <- c(
"Korea, Republic of",
"Taiwan, Province of China",
"Macedonia, the former Yugoslav Republic of",
"Moldova, Republic of",
"Bolivia",
"Bolivia, Plurinational State of",
"Palestinian Territory, Occupied",
"Côte d'Ivoire",
"Venezuela, Bolivarian Republic of",
"Viet Nam",
"Russian Federation",
"Iran, Islamic Republic of",
"Lao People's Democratic Republic",
"Libyan Arab Jamahiriya",
"Congo, the Democratic Republic of the",
"Syrian Arab Republic",
"Korea, Democratic People's Republic of"
)
replace <- c(
"South Korea",
"Taiwan Republic of China (Taiwan)",
"North Macedonia",
"Moldova",
"Bolivia",
"Tanzania",
"Palestine",
"Ivory Coast",
"Venezuela",
"Vietnam",
"Russia",
"Iran",
"Laos",
"Libya",
"Democratic Republic of the Congo",
"Syria",
"North Korea"
)
geoCode$Country <- str_replace(geoCode$Country,find, replace)
length(find)
length(replace)
paste(find, sep="|")
paste(find, sep="|")
paste(find, sep="|", collapse = "|")
paste(find, collapse = "|")
geoCode$Country <-
str_replace(geoCode$Country,paste(find, collapse = "|"), paste(replace, collapse = "|"))
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
revalue(geoCode$Country, replaceCountries)
library(plyr)
revalue(geoCode$Country, replaceCountries)
# 18 need updating
replaceCountries <- c(
"Korea, Republic of" = "South Korea",
"Taiwan, Province of China" ="Taiwan Republic of China (Taiwan)",
"Macedonia, the former Yugoslav Republic of" = "North Macedonia",
"Moldova, Republic of" = "Moldova",
"Bolivia, Plurinational State of" = "Bolivia",
"Palestinian Territory, Occupied" = "Palestine",
"Côte d'Ivoire" = "Ivory Coast",
"Venezuela, Bolivarian Republic of" = "Venezuela",
"Viet Nam" = "Vietnam",
"Russian Federation" = "Russia",
"Iran, Islamic Republic of" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Libyan Arab Jamahiriya" = "Libya",
"Congo, the Democratic Republic of the" = "Democratic Republic of the Congo",
"Syrian Arab Republic" = "Syria",
"Korea, Democratic People's Republic of" = "North Korea"
)
revalue(geoCode$Country, replaceCountries)
geoCode$Country <- revalue(geoCode$Country, replaceCountries)
setdiff(democracyIndex$country, geoCode$Country)
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
# find country names that do not match
length(setdiff(democracyIndex$country, geoCode$Country))
# 18 need updating
replaceCountries <- c(
"Korea, Republic of" = "South Korea",
"Taiwan, Province of China" ="Taiwan Republic of China (Taiwan)",
"Macedonia, the former Yugoslav Republic of" = "North Macedonia",
"Moldova, Republic of" = "Moldova",
"Bolivia, Plurinational State of" = "Bolivia",
"Palestinian Territory, Occupied" = "Palestine",
"Côte d'Ivoire" = "Ivory Coast",
"Venezuela, Bolivarian Republic of" = "Venezuela",
"Viet Nam" = "Vietnam",
"Russian Federation" = "Russia",
"Iran, Islamic Republic of" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Libyan Arab Jamahiriya" = "Libya",
"Congo, the Democratic Republic of the" = "Democratic Republic of the Congo",
"Tanzania, United Republic of" = "Tanzania",
"Congo" = "Republic of the Congo",
"Syrian Arab Republic" = "Syria",
"Korea, Democratic People's Republic of" = "North Korea"
)
geoCode$Country <- revalue(geoCode$Country, replaceCountries)
setdiff(democracyIndex$country, geoCode$Country)
View(geoCode)
geoCode$`Alpha-2 code` <- NULL
geoCode$`Numeric code` <- NULL
geoCode$Icon <- NULL
# set names
names(geoCode) <- c("country","code","lat","lng")
democracyIndex <- read_csv("raw-data/democracy_index_2018.csv")
# set colnames
names(democracyIndex) <- c(
"demRank",
"country",
"demScore",
"demPluralism",
"demFunctioning",
"demParticipation",
"demCulture",
"demCivil",
"demCategory"
)
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
# remove unwanted columns
geoCode$`Alpha-2 code` <- NULL
geoCode$`Numeric code` <- NULL
geoCode$Icon <- NULL
geoCode <- read_csv("raw-data/Country_List_ISO_3166_Codes_Latitude_Longitude.csv")
# remove unwanted columns
geoCode$`Alpha-2 code` <- NULL
geoCode$`Numeric code` <- NULL
geoCode$Icon <- NULL
# set names
names(geoCode) <- c("country","code","lat","lng")
# find country names that do not match
length(setdiff(democracyIndex$country, geoCode$Country))
# find country names that do not match
length(setdiff(democracyIndex$country, geoCode$country))
geoCode$country <- revalue(geoCode$country, replaceCountries)
# 18 need updating
replaceCountries <- c(
"Korea, Republic of" = "South Korea",
"Taiwan, Province of China" ="Taiwan Republic of China (Taiwan)",
"Macedonia, the former Yugoslav Republic of" = "North Macedonia",
"Moldova, Republic of" = "Moldova",
"Bolivia, Plurinational State of" = "Bolivia",
"Palestinian Territory, Occupied" = "Palestine",
"Côte d'Ivoire" = "Ivory Coast",
"Venezuela, Bolivarian Republic of" = "Venezuela",
"Viet Nam" = "Vietnam",
"Russian Federation" = "Russia",
"Iran, Islamic Republic of" = "Iran",
"Lao People's Democratic Republic" = "Laos",
"Libyan Arab Jamahiriya" = "Libya",
"Congo, the Democratic Republic of the" = "Democratic Republic of the Congo",
"Tanzania, United Republic of" = "Tanzania",
"Congo" = "Republic of the Congo",
"Syrian Arab Republic" = "Syria",
"Korea, Democratic People's Republic of" = "North Korea"
)
geoCode$country <- revalue(geoCode$country, replaceCountries)
setdiff(democracyIndex$country, geoCode$country)
democracyIndex <- merge(democracyIndex, geoCode, by="country", all.y = FALSE)
View(democracyIndex)
religion <-  read_excel("raw-data/Religious_Composition_by_Country_2010-2050.xlsx", col_names = TRUE)
# remove excel id column
religion$row_number <- NULL
# only use level 1, not regional data
religion <- religion[religion$level == 1,]
# remove level key
religion$level <- NULL
# remove nation foreign key
religion$Nation_fk <- NULL
# only use 2010 values
religion$Year <- as.numeric(religion$Year)
religion <- religion[religion$Year == 2010,]
religion$Year <- NULL
# clean numbers
religion$Christians <- str_replace_all(religion$Christians, ",","") %>% as.numeric
religion$Muslims <- str_replace_all(religion$Muslims, ",","") %>% as.numeric
religion$Unaffiliated <- str_replace_all(religion$Unaffiliated, ",","") %>% as.numeric
religion$Hindus <- str_replace_all(religion$Hindus, ",","") %>% as.numeric
religion$Buddhists <- str_replace_all(religion$Buddhists, ",","") %>% as.numeric
religion$`Folk Religions` <- str_replace_all(religion$`Folk Religions`, ",","") %>% as.numeric
religion$`Other Religions` <- str_replace_all(religion$`Other Religions`, ",","") %>% as.numeric
religion$Jews <- str_replace_all(religion$Jews, ",","") %>% as.numeric
religion$`All Religions` <- str_replace_all(religion$`All Religions`, ",","") %>% as.numeric
# set colnames
names(religion) <- c(
"region",
"country",
"christian",
"muslim",
"unaffiliated",
"hindu",
"buddhist",
"folkReligion",
"otherReligion",
"jewish",
"allReligions"
)
setdiff(democracyIndex$country, religion$country)
View(democracyIndex)
View(religion)
replaceCountries <- c(
"Bosnia-Herzegovina = Bosnia and Herzegovina",
"Burma (Myanmar)" = "Myanmar",
"Republic of Macedonia" = "North Macedonia",
"Palestinian territories" = "Palestine",
"Taiwan" = "Taiwan Republic of China (Taiwan)"
)
religion$country <- revalue(religion$country, replaceCountries)
setdiff(democracyIndex$country, religion$country)
replaceCountries <- c(
"Bosnia-Herzegovina" = "Bosnia and Herzegovina",
"Burma (Myanmar)" = "Myanmar",
"Republic of Macedonia" = "North Macedonia",
"Palestinian territories" = "Palestine",
"Taiwan" = "Taiwan Republic of China (Taiwan)"
)
religion$country <- revalue(religion$country, replaceCountries)
religion <-  read_excel("raw-data/Religious_Composition_by_Country_2010-2050.xlsx", col_names = TRUE)
# remove excel id column
religion$row_number <- NULL
# only use level 1, not regional data
religion <- religion[religion$level == 1,]
# remove level key
religion$level <- NULL
# remove nation foreign key
religion$Nation_fk <- NULL
# only use 2010 values
religion$Year <- as.numeric(religion$Year)
religion <- religion[religion$Year == 2010,]
religion$Year <- NULL
# clean numbers
religion$Christians <- str_replace_all(religion$Christians, ",","") %>% as.numeric
religion$Muslims <- str_replace_all(religion$Muslims, ",","") %>% as.numeric
religion$Unaffiliated <- str_replace_all(religion$Unaffiliated, ",","") %>% as.numeric
religion$Hindus <- str_replace_all(religion$Hindus, ",","") %>% as.numeric
religion$Buddhists <- str_replace_all(religion$Buddhists, ",","") %>% as.numeric
religion$`Folk Religions` <- str_replace_all(religion$`Folk Religions`, ",","") %>% as.numeric
religion$`Other Religions` <- str_replace_all(religion$`Other Religions`, ",","") %>% as.numeric
religion$Jews <- str_replace_all(religion$Jews, ",","") %>% as.numeric
religion$`All Religions` <- str_replace_all(religion$`All Religions`, ",","") %>% as.numeric
# set colnames
names(religion) <- c(
"region",
"country",
"christian",
"muslim",
"unaffiliated",
"hindu",
"buddhist",
"folkReligion",
"otherReligion",
"jewish",
"allReligions"
)
setdiff(democracyIndex$country, religion$country)
replaceCountries <- c(
"Bosnia-Herzegovina" = "Bosnia and Herzegovina",
"Burma (Myanmar)" = "Myanmar",
"Republic of Macedonia" = "North Macedonia",
"Palestinian territories" = "Palestine",
"Taiwan" = "Taiwan Republic of China (Taiwan)"
)
religion$country <- revalue(religion$country, replaceCountries)
setdiff(democracyIndex$country, religion$country)
data_wide <- merge(democracyIndex, religion, by="country")
startCol <- which(colnames(data_wide) == "christian")
endCol <- which(colnames(data_wide) == "jewish")
data_long <- gather(data_wide, key="religion", value="count",  startCol:endCol, factor_key=TRUE)
write_json(democracyIndex,"../webpack/dist/data/democracy-index.json")
write_json(religion,"../webpack/dist/data/religion.json")
write_json(data_wide,"../webpack/dist/data/data_wide.json")
write_json(data_long,"../webpack/dist/data/data_long.json")
write_json(geoCode, "../webpack/dist/data/data_countries.json")
library(tidyverse)
library(readxl)
library(jsonlite)
library(plyr)
write_json(geoCode, "../webpack/dist/data/data_countries.json")
